package com.rabbit;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitMessagingTemplate;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;




@Configuration
public class ProducerConfig {
	@Bean
	public Queue demo() {
		return new Queue("demo");
	}
	@Bean
	public TopicExchange demoExchange() {
		return new TopicExchange("demo_exchange");
	}
	@Bean
	public Binding binding(Queue queue,TopicExchange exchange) {
		return BindingBuilder.bind(queue).to(exchange).with("");
	}
	@Bean
	public AmqpTemplate template(ConnectionFactory cf) {
		
		RabbitTemplate template = new RabbitTemplate(cf);
		return template;
	}
}
