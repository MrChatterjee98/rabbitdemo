package com.rabbit;

import org.springframework.amqp.core.AmqpTemplate;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;




@Configuration
public class ProducerConfig {
		
	public static final String queue = "queue1";
	public static final String routingKey = "routing1";
	public static final String exchange = "exchange1";
	@Bean
	public Queue demo() {
		
		return new Queue(queue,false);
	}
	@Bean
	public DirectExchange demoExchange() {
		return new DirectExchange("demo_exchange");
	}
	@Bean
	public Binding binding(Queue queue,DirectExchange demoExchange) {
		return BindingBuilder.bind(queue).to(demoExchange).with("demo");
	}
	@Bean
	public AmqpTemplate template(ConnectionFactory cf) {
		RabbitTemplate template = new RabbitTemplate(cf);
		
		return template;
	}
}
